# Generated by Django 5.0.6 on 2024-06-19 14:04

import brands.models.brand
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('collaborations', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AverageCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Средний чек бренда')),
                ('sort', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Сортировка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Средний чек бренда',
                'verbose_name_plural': 'Средние чеки бренда',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True, verbose_name='Название категории')),
                ('sort', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Сортировка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Интерес/тег')),
                ('sort', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Сортировка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Интерес/тег',
                'verbose_name_plural': 'Интересы/теги',
            },
        ),
        migrations.CreateModel(
            name='NameSocialNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название соц сети/месседжера/сайта')),
                ('sort', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Сортировка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Название соц сети',
                'verbose_name_plural': 'Название соц сетей',
            },
        ),
        migrations.CreateModel(
            name='NumberSubscribers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Кол-во подписчиков')),
                ('sort', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Сортировка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Кол-во подписчиков',
                'verbose_name_plural': 'Кол-во подписчиков',
            },
        ),
        migrations.CreateModel(
            name='Predictions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction', models.CharField(max_length=355, verbose_name='Предсказание')),
            ],
            options={
                'verbose_name': 'Предсказание',
                'verbose_name_plural': 'Предсказания',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, null=True, verbose_name='Название бренда')),
                ('status', models.CharField(choices=[('new', 'новый'), ('pending', 'модератор взял в работу'), ('accepted', 'модерация прошла успешно'), ('rejected', 'модерация прошла, информация не принята')], default='new', max_length=50, verbose_name='Статус')),
                ('avatar_id', models.ImageField(blank=True, null=True, upload_to=brands.models.brand.get_image_path_brand, verbose_name='Аватар')),
                ('value', models.CharField(blank=True, max_length=256, null=True, verbose_name='Ценности бренда')),
                ('target_audience', models.TextField(blank=True, null=True, verbose_name='Целевая аудитория')),
                ('link', models.URLField(verbose_name='Ссылка на сайт бренда')),
                ('description', models.TextField(blank=True, null=True, verbose_name='О бренде/описание')),
                ('geo', models.CharField(blank=True, max_length=256, null=True, verbose_name='ГЕО')),
                ('balance', models.IntegerField(default=1, null=True, verbose_name='Баланс')),
                ('experience', models.IntegerField(default=1, null=True, verbose_name='Опыт')),
                ('level', models.IntegerField(default=1, null=True, verbose_name='Уровень')),
                ('modifier', models.IntegerField(default=1, null=True, verbose_name='Модификатор')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
                ('author', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('average_check', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='brands.averagecheck', verbose_name='Средний чек')),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренды',
                'ordering': ('status', 'name'),
            },
        ),
        migrations.CreateModel(
            name='BrandCollaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brands_collaborations', to='brands.brand', verbose_name='ID бренда')),
                ('collaboration_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='collaborations', to='collaborations.collaboration', verbose_name='Коллаборация')),
            ],
            options={
                'verbose_name': 'Сводная таблица бренд и коллаборации',
                'verbose_name_plural': 'Сводная таблица бренды и коллаборации',
                'ordering': ('-brand_id', 'collaboration_id'),
            },
        ),
        migrations.AddField(
            model_name='brand',
            name='collaboration',
            field=models.ManyToManyField(blank=True, related_name='brand_collaboration', through='brands.BrandCollaboration', to='collaborations.collaboration', verbose_name='Коллаборации'),
        ),
        migrations.CreateModel(
            name='BrandCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brands_categories', to='brands.brand', verbose_name='ID бренда')),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='categories', to='brands.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Сводная таблица бренд и категория',
                'verbose_name_plural': 'Сводная таблица бренды и категории',
                'ordering': ('-brand_id', 'category_id'),
            },
        ),
        migrations.AddField(
            model_name='brand',
            name='category',
            field=models.ManyToManyField(blank=True, related_name='brand_category', through='brands.BrandCategory', to='brands.category', verbose_name='Категории'),
        ),
        migrations.CreateModel(
            name='FotoBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(blank=True, null=True, upload_to=brands.models.brand.get_image_path_brand, verbose_name='Фотография')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание фотографии')),
                ('brand_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brand_foto', to='brands.brand', verbose_name='ID бренда')),
            ],
            options={
                'verbose_name': 'Фотография бренда',
                'verbose_name_plural': 'Фотографии бренда',
            },
        ),
        migrations.CreateModel(
            name='BrandInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brands_interests', to='brands.brand', verbose_name='ID бренда')),
                ('interest_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='interests', to='brands.interest', verbose_name='ID интереса')),
            ],
            options={
                'verbose_name': 'Сводная таблица бренда и интерес',
                'verbose_name_plural': 'Сводные таблицы бренды и интересы',
                'ordering': ('-brand_id', 'interest_id'),
            },
        ),
        migrations.AddField(
            model_name='brand',
            name='interests',
            field=models.ManyToManyField(blank=True, related_name='brand_interest', through='brands.BrandInterest', to='brands.interest', verbose_name='Интересы'),
        ),
        migrations.AddField(
            model_name='brand',
            name='number_subscribers',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='brands.numbersubscribers', verbose_name='Кол-во подписчиков'),
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(verbose_name='Ссылка на соц сеть/месседжер')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
                ('brand_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brand_social_network', to='brands.brand', verbose_name='ID бренда')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='socialnetwork_name', to='brands.namesocialnetwork', verbose_name='Название соц сети')),
            ],
            options={
                'verbose_name': 'Ссылка на соц сеть',
                'verbose_name_plural': 'Ссылки на соц сети',
            },
        ),
    ]

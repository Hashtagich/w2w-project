# Generated by Django 5.0.6 on 2024-06-08 13:14

import customer.models.brand
import customer.models.collaboration
import customer.models.customer
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AverageCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Средний чек бренда')),
                ('sort', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Сортировка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Средний чек бренда',
                'verbose_name_plural': 'Средние чеки бренда',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True, verbose_name='Название категории')),
                ('sort', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Сортировка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, null=True, verbose_name='Имя пользователя')),
                ('surname', models.CharField(max_length=30, null=True, verbose_name='Фамилия пользователя')),
                ('patronymic', models.CharField(blank=True, max_length=30, null=True, verbose_name='Отчество пользователя')),
                ('nickname', models.CharField(blank=True, max_length=30, null=True, verbose_name='Никнейм пользователя')),
                ('date_birth', models.DateField(blank=True, verbose_name='Дата рождения')),
                ('zodiac', models.CharField(blank=True, choices=[('Aries', 'Овен'), ('Taurus', 'Телец'), ('Gemini', 'Близнецы'), ('Cancer', 'Рак'), ('Leo', 'Лев'), ('Virgo', 'Дева'), ('Libra', 'Весы'), ('Scorpio', 'Скорпион'), ('Ophiuchus', 'Змееносец'), ('Sagittarius', 'Стрелец'), ('Capricorn', 'Козерог'), ('Aquarius', 'Водолей'), ('Pisces', 'Рыбы')], max_length=20, verbose_name='Знак зодиака')),
                ('email', models.EmailField(max_length=100, null=True, verbose_name='Эл.почта пользователя')),
                ('phone', models.CharField(blank=True, max_length=12, null=True, verbose_name='Контактный телефон')),
                ('balance', models.IntegerField(default=1, null=True, verbose_name='Баланс')),
                ('experience', models.IntegerField(default=1, null=True, verbose_name='Опыт')),
                ('level', models.IntegerField(default=1, null=True, verbose_name='Уровень')),
                ('modifier', models.IntegerField(default=1, null=True, verbose_name='Модификатор')),
                ('gender', models.CharField(blank=True, choices=[('man', 'Мужчина'), ('woman', 'Женщина')], max_length=10, verbose_name='Пол')),
                ('avatar_id', models.ImageField(blank=True, null=True, upload_to=customer.models.customer.get_image_path_customer, verbose_name='Аватар')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('surname', 'name', 'balance'),
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(null=True, verbose_name='Вопрос')),
                ('answer', models.TextField(null=True, verbose_name='Ответ')),
            ],
            options={
                'verbose_name': 'Часто задаваемые вопросы',
                'verbose_name_plural': 'Часто задаваемые вопросы',
            },
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Интерес/тег')),
                ('sort', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Сортировка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Интерес/тег',
                'verbose_name_plural': 'Интересы/теги',
            },
        ),
        migrations.CreateModel(
            name='MagicBall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction', models.CharField(max_length=355)),
            ],
            options={
                'verbose_name': 'Предсказание',
                'verbose_name_plural': 'Предсказания',
            },
        ),
        migrations.CreateModel(
            name='NameSocialNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название соц сети/месседжера/сайта')),
                ('sort', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Сортировка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Название соц сети',
                'verbose_name_plural': 'Название соц сетей',
            },
        ),
        migrations.CreateModel(
            name='NumberSubscribers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Кол-во подписчиков')),
                ('sort', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Сортировка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Кол-во подписчиков',
                'verbose_name_plural': 'Кол-во подписчиков',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Название роли')),
                ('sort', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Сортировка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Роль пользователя',
                'verbose_name_plural': 'Роли пользователей',
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, null=True, verbose_name='Название тарифа')),
                ('price', models.IntegerField(null=True, verbose_name='Стоимость тарифа')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание тарифа')),
                ('duration', models.IntegerField(default=12, null=True, verbose_name='Длительность тарифа')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, null=True, verbose_name='Название бренда')),
                ('status', models.CharField(choices=[('new', 'новый'), ('pending', 'модератор взял в работу'), ('accepted', 'модерация прошла успешно'), ('rejected', 'модерация прошла, информация не принята')], default='new', max_length=50, verbose_name='Статус')),
                ('avatar_id', models.ImageField(blank=True, null=True, upload_to=customer.models.brand.get_image_path_brand, verbose_name='Аватар')),
                ('value', models.CharField(blank=True, max_length=256, null=True, verbose_name='Ценности бренда')),
                ('target_audience', models.TextField(blank=True, null=True, verbose_name='Описание ЦА')),
                ('geo', models.CharField(blank=True, max_length=256, null=True, verbose_name='ГЕО')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
                ('average_check', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='customer.averagecheck', verbose_name='Средний чек')),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренды',
                'ordering': ('status', 'name'),
            },
        ),
        migrations.CreateModel(
            name='BrandCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brands_categories', to='customer.brand', verbose_name='ID бренда')),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='categories', to='customer.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Сводная таблица бренд и категория',
                'verbose_name_plural': 'Сводная таблица бренды и категории',
                'ordering': ('-brand_id', 'category_id'),
            },
        ),
        migrations.AddField(
            model_name='brand',
            name='category',
            field=models.ManyToManyField(blank=True, related_name='brand_category', through='customer.BrandCategory', to='customer.category', verbose_name='Категории'),
        ),
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, null=True, verbose_name='Название коллаборации')),
                ('avatar_id', models.ImageField(blank=True, null=True, upload_to=customer.models.collaboration.get_image_path_collaboration, verbose_name='Аватар')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание коллаборации')),
                ('result', models.TextField(blank=True, null=True, verbose_name='Результат коллаборации')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
                ('average_check', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='customer.averagecheck', verbose_name='Средний чек')),
                ('number_subscribers', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='customer.numbersubscribers', verbose_name='Кол-во подписчиков')),
            ],
            options={
                'verbose_name': 'Коллаборация',
                'verbose_name_plural': 'Коллаборации',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='BrandCollaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brands_collaborations', to='customer.brand', verbose_name='ID бренда')),
                ('collaboration_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='collaborations', to='customer.collaboration', verbose_name='Коллаборация')),
            ],
            options={
                'verbose_name': 'Сводная таблица бренд и коллаборации',
                'verbose_name_plural': 'Сводная таблица бренды и коллаборации',
                'ordering': ('-brand_id', 'collaboration_id'),
            },
        ),
        migrations.AddField(
            model_name='brand',
            name='collaboration',
            field=models.ManyToManyField(blank=True, related_name='brand_collaborations', through='customer.BrandCollaboration', to='customer.collaboration', verbose_name='Коллаборации'),
        ),
        migrations.AddField(
            model_name='brand',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='customer.customer', verbose_name='Пользователь/автор'),
        ),
        migrations.CreateModel(
            name='FotoBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(blank=True, null=True, upload_to=customer.models.brand.get_image_path_brand, verbose_name='Фотография')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание фотографии')),
                ('brand_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brand_foto', to='customer.brand', verbose_name='ID бренда')),
            ],
            options={
                'verbose_name': 'Фотография бренда',
                'verbose_name_plural': 'Фотографии бренда',
            },
        ),
        migrations.CreateModel(
            name='FotoCollaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(blank=True, null=True, upload_to=customer.models.collaboration.get_image_path_collaboration, verbose_name='Фотография')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание фотографии')),
                ('collaboration_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='collaboration_foto', to='customer.collaboration', verbose_name='ID коллаборации')),
            ],
            options={
                'verbose_name': 'Фотография коллаборации',
                'verbose_name_plural': 'Фотографии коллаборации',
            },
        ),
        migrations.CreateModel(
            name='FotoCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(blank=True, null=True, upload_to=customer.models.customer.get_image_path_customer, verbose_name='Фотография')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание фотографии')),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='customer_foto', to='customer.customer', verbose_name='ID пользователя')),
            ],
            options={
                'verbose_name': 'Фотография пользователя',
                'verbose_name_plural': 'Фотографии пользователя',
            },
        ),
        migrations.CreateModel(
            name='CustomerInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='customers_interests', to='customer.customer', verbose_name='ID пользователя')),
                ('interest_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='interests', to='customer.interest', verbose_name='ID интереса')),
            ],
            options={
                'verbose_name': 'Сводная таблица пользователь и интерес',
                'verbose_name_plural': 'Сводная таблица пользователи и интересы',
                'ordering': ('-customer_id', 'interest_id'),
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='interests',
            field=models.ManyToManyField(blank=True, related_name='customer_interest', through='customer.CustomerInterest', to='customer.interest', verbose_name='Интересы'),
        ),
        migrations.AddField(
            model_name='brand',
            name='number_subscribers',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='customer.numbersubscribers', verbose_name='Кол-во подписчиков'),
        ),
        migrations.AddField(
            model_name='customer',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='customer.role', verbose_name='Роль'),
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(verbose_name='Ссылка на соц сеть/месседжер/сайт')),
                ('datetime_create', models.DateTimeField(auto_now_add=True)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='customer_social_network', to='customer.customer', verbose_name='ID пользователя')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='socialnetwork_name', to='customer.namesocialnetwork', verbose_name='Название соц сети')),
            ],
            options={
                'verbose_name': 'Ссылка на соц сеть',
                'verbose_name_plural': 'Ссылки на соц сети',
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='tariff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='customer.tariff', verbose_name='Тариф'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Этап/задача №1', max_length=60, null=True, verbose_name='Название задачи/этапа')),
                ('status', models.CharField(choices=[('new', 'Создана'), ('in_progress', 'В процессе'), ('done', 'Завершена')], default='new', max_length=50, verbose_name='Статус')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание задачи/этапа')),
                ('datetime_start', models.DateTimeField(blank=True, verbose_name='Дата начала задачи/этапа')),
                ('datetime_completion', models.DateTimeField(blank=True, verbose_name='Дата когда задача/этап должна быть выполнена')),
                ('datetime_finish', models.DateTimeField(blank=True, verbose_name='Дата окончания задачи/этапа')),
                ('datetime_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания задачи/этапа')),
                ('author', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='customer.customer', verbose_name='Пользователь/автор')),
                ('collaboration_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='collaboration_task', to='customer.collaboration', verbose_name='Коллаборация')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'ordering': ('status', 'name'),
            },
        ),
    ]
